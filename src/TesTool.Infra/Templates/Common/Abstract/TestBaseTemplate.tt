<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<# 
    foreach (var @namespace in Namespaces) 
    {
#>
using <#=@namespace#>;
<# 
    } 
#>
using System;
using Xunit;

namespace <#= Namespace #>
{
    public class <#= Name #> : IClassFixture<<#= FixtureName #>>
    {
        public readonly Uri Uri;
        public readonly Request Request;
        public readonly <#= DbContext #> DbContext;

        public readonly ModelFakerFactory ModelFactory;
        public readonly EntityFakerFactory EntityFactory;
        public readonly CompareFactory CompareFactory;

        public <#= Name #>(<#= FixtureName #> fixture, string url)
        {
            Request = fixture.Request;
            DbContext = fixture.DbContext;
            Uri = new Uri($"{fixture.Client.BaseAddress}{url}");

            ModelFactory = new ModelFakerFactory();
            EntityFactory = new EntityFakerFactory(this);
            CompareFactory = new CompareFactory();
<#
    if (Auth)
    {
#>
            Login();
<#
    }
#>
        }
<#
    if (Auth)
    {
#>
        protected virtual void Login()
        {
            // TODO: add your auth flow
            // Request.Client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer|Basic", token);
        }

        protected virtual void Logout()
        {
            Request.Client.DefaultRequestHeaders.Authorization = null;
        }
<#
    }
#>
    }
}
<#+
    public bool Auth { get; set; }
    public string Name { get; set; }
    public string Namespace { get; set; }
    public string FixtureName { get; set; }
    public string DbContext { get; set; }
    public string[] Namespaces { get; set; }
#>