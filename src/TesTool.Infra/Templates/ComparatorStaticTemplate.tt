<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="TesTool.Core.Models.Templates.Comparator" #>
<# var tab = "    "; #>
using Xunit;
<# foreach (var @namespace in Namespaces) {
  #>using <#=@namespace#>;
<# } #>

namespace <#=ComparatorNamespace#>
{
    public class <#=ComparatorClassName#>
    {
<#      #><# if (SourceClassName!=TargetClassName) { #>
        public void Equals(<#=TargetClassName#> source, <#=SourceClassName#> target) => Equals(source, target);
<#      #><# } #>
        public void Equals(<#=SourceClassName#> source, <#=TargetClassName#> target)
        {
<#      #><# foreach (var property in Properties) { #>
            Assert.Equal(source.<#=property.PropertyName#>, target.<#=property.PropertyName#>);
<#      #><# } #>
<#      #><# foreach (var comparer in Comparers) { 
            var rowStringBuilder = new StringBuilder();
            rowStringBuilder.Append($"{tab + tab + tab}");
            if (comparer.Unsafe) rowStringBuilder.Append("// ");
            rowStringBuilder.Append($"new {comparer.ComparerClassName}().Equals(source.{comparer.PropertyName}, target.{comparer.PropertyName});\n");
            #><#=rowStringBuilder.ToString()#><#
        #><# } #>
        }
    }
}
<#+
    public string ComparatorNamespace { get; set; }
    public string ComparatorClassName { get; set; }
    public string SourceClassName { get; set; }
    public string TargetClassName { get; set; }
    public string[] Namespaces { get; set; }
    public CompareProperty[] Properties { get; set; }
    public CompareObject[] Comparers { get; set; }
#>